datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model HumanizationRequest {
  createdAt  DateTime @default(now())
  id         String   @id @default(cuid())
  inputText  String?
  outputText String?
  updatedAt  DateTime @updatedAt
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?
}

model Membership {
  createdAt DateTime                 @default(now())
  id        String                   @id @default(cuid())
  typeField EnumMembershipTypeField?
  updatedAt DateTime                 @updatedAt
  users     User[]
}

model Payment {
  amount    Float?
  createdAt DateTime           @default(now())
  id        String             @id @default(cuid())
  status    EnumPaymentStatus?
  updatedAt DateTime           @updatedAt
  user      User?              @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  createdAt            DateTime              @default(now())
  email                String?               @unique
  firstName            String?
  humanizationRequests HumanizationRequest[]
  id                   String                @id @default(cuid())
  lastName             String?
  membership           Membership?           @relation(fields: [membershipId], references: [id])
  membershipId         String?
  password             String
  payments             Payment[]
  roles                Json
  updatedAt            DateTime              @updatedAt
  username             String                @unique
}

enum EnumMembershipTypeField {
  Option1
}

enum EnumPaymentStatus {
  Option1
}
